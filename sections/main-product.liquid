{% assign current_variant = product.selected_or_first_available_variant %}

{% assign background_color = product.metafields.custom.background_color %}

{%- if color_list.size > 1 -%}
  <style>
    .add-to-cart-button {
      background: radial-gradient(50% 45% at 50% 50%, {{ color_list[0] }} 40%, {{ color_list[1] }} 100%);
    }
  </style>
{%- endif -%}

{{ 'main-product.css' | asset_url | stylesheet_tag }}

<style>
    .buy-now-button {
    display: flex;
    height: 48px;
    padding: 14px 42px;
    justify-content: center;
    align-items: center;
    font-family: Manrope;
    gap: 10px;
    background-color: {{ background_color }};
    border: 1px solid {{ background_color }};
    border-radius: 9999px;
    color: #fff;
    font-weight: 700;
    cursor: pointer;
    box-sizing: border-box;
    transition: background-color 0.3s, color 0.3s;
  }

    .add-to-cart-button {
    display: flex;
    height: 48px;
    padding: 14px 24px;
    justify-content: center;
    align-items: center;
    gap: 10px;
    background-color: #FFF;
    border: 1px solid #FFF;
    border-radius: 9999px;
    color: {{ background_color }};
    font-weight: 700;
    cursor: pointer;
    box-sizing: border-box;
    transition: background-color 0.3s, color 0.3s, border-color 0.3s;
  }
</style>

<pre style="background: #f1f1f1; padding: 15px; border: 1px solid #ccc; color: #000;">
  <strong>DEBUGGING OUTPUT:</strong>
  Value of color_list: {{ color_list | json }}
  Size of color_list: {{ color_list.size }}
</pre>
{% comment %} --- END DEBUGGING --- {% endcomment %}


{%- if color_list.size > 1 -%}
  <style>
    .product-page-wrapper {
      background-image: radial-gradient(circle, {{ color_list[0] }} 50%, {{ color_list[1] }} 100%);
    }
  </style>
{%- endif -%}

{%- if color_list.size > 1 -%}
  <style>
    .product-page-wrapper {
      background-image: radial-gradient(circle, {{ color_list[0] }} 50%, {{ color_list[1] }} 100%);
    }
    
  </style>
{%- endif -%}

<div class="product-page-wrapper pageWidth js-hero-section" style="">
  <div class="header-section">
    <div class="product-title-section">
      <h1 class="product-title">{{ product.title }}</h1>
      <span class="product-weight">{{ current_variant.title }}</span>
    </div>

    <div class="variant-selector-section">
      {% for option in product.options_with_values %}
        <div class="product-option">
          {% if product.variants.size > 1 %}
            {% for value in option.values %}
              <button
                class="variant-button {% if option.selected_value == value %}active{% endif %}"
                data-option-value="{{ value | escape }}"
              >
                {{ value | escape }}
              </button>
            {% endfor %}
          {% endif %}
        </div>
      {% endfor %}
    </div>
  </div>

  <div class="product-image-container">
    <div class="splide product-images-splide">
      <div class="splide__track">
        <div class="splide__list">
          {% for image in product.images %}
            <div class="splide__slide">
              <img src="{{ image | img_url: '750x' }}" alt="{{ image.alt | escape }}" class="product-image">
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>

  <div class="product-description-section">
    {{ product.description }}
  </div>

  <div class="price-section">
    <span class="current-price">{{ current_variant.price | money }}</span>
    {% if current_variant.compare_at_price %}
      <del class="old-price">{{ current_variant.compare_at_price | money }}</del>
    {% endif %}
  </div>

  <div class="quantity-form-section">
    <form action="/cart/add" method="post" enctype="multipart/form-data" id="product-form">
      <input type="hidden" name="id" value="{{ current_variant.id }}">
      <div class="quantity-selector">
        <button type="button" class="quantity-down-button">â€“</button>
        <input type="number" name="quantity" value="1" min="1" pattern="[0-9]*" id="quantity-input">
        <button type="button" class="quantity-up-button">+</button>
      </div>
    </form>
    <button type="submit" form="product-form" class="buy-now-button">Buy Now</button>
  </div>
  
  <div class="footer-container pageWidth">
    <h2 class="product-title-bottom-footer">{{ product.title }}</h2>
    <div class="footer-menu">
      <a href="#science" class="footer-link">Science</a>
      <a href="#reviews" class="footer-link">Reviews</a>
      <a href="#ingredients" class="footer-link">Ingredients</a>
      <a href="#dosage" class="footer-link">Dosage</a>
      <a href="#faq" class="footer-link">FAQ</a>
      <a href="#subscription" class="footer-link">Subscription</a>
    </div>
    <div class="footer-actions">
      <div class="footer-price-section">
        {% if current_variant.compare_at_price %}
          <span class="footer-price-old">{{ current_variant.compare_at_price | money }}</span>
        {% endif %}
        <span class="footer-price-current">{{ current_variant.price | money }}</span>
      </div>
      <button type="submit" form="product-form" class="add-to-cart-button">Add To Cart</button>
    </div>
  </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css">
<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    new Splide('.product-images-splide', {
      type: 'fade',
      rewind: true,
      autoplay: true,
      interval: 5000,
      speed: 1000,
      pauseOnHover: false,
      arrows: false,
      pagination: false
    }).mount();

    const quantityInput = document.getElementById('quantity-input');
    const quantityDownButton = document.querySelector('.quantity-down-button');
    const quantityUpButton = document.querySelector('.quantity-up-button');
    const productForm = document.getElementById('product-form');
    const buyNowButton = document.querySelector('.buy-now-button');
    const addToCartButton = document.querySelector('.add-to-cart-button');

    function updateQuantityButtons() {
      const currentValue = parseInt(quantityInput.value);
      const min = parseInt(quantityInput.min);

      if (currentValue <= min) {
        quantityDownButton.classList.add('disabled');
        quantityDownButton.disabled = true;
      } else {
        quantityDownButton.classList.remove('disabled');
        quantityDownButton.disabled = false;
      }
    }

    quantityDownButton.addEventListener('click', function() {
      quantityInput.stepDown();
      updateQuantityButtons();
    });

    quantityUpButton.addEventListener('click', function() {
      quantityInput.stepUp();
      updateQuantityButtons();
    });

    quantityInput.addEventListener('change', updateQuantityButtons);

    buyNowButton.addEventListener('click', function(e) {
      e.preventDefault();
      const formData = new FormData(productForm);
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(() => {
        window.location.href = '/cart';
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });

    addToCartButton.addEventListener('click', function(e) {
      e.preventDefault();
      const formData = new FormData(productForm);
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(() => {
        window.location.href = '/cart';
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });

    updateQuantityButtons();

    const variantButtons = document.querySelectorAll('.variant-button');
    const hiddenInput = productForm.querySelector('input[name="id"]');
    const productWeightElement = document.querySelector('.product-weight');
    const priceElement = document.querySelector('.price-section .current-price');
    const oldPriceElement = document.querySelector('.price-section .old-price');
    const footerPriceCurrent = document.querySelector('.footer-price-current');
    const footerPriceOld = document.querySelector('.footer-price-old');

    variantButtons.forEach(button => {
      button.addEventListener('click', function(event) {
        event.preventDefault();

        const selectedValue = this.getAttribute('data-option-value');

        const allVariants = {{ product.variants | json }};
        const selectedVariant = allVariants.find(variant => variant.title === selectedValue);

        if (selectedVariant) {
          hiddenInput.value = selectedVariant.id;

          productWeightElement.textContent = selectedVariant.title;
          priceElement.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.price / 100).toFixed(2) }`;
          footerPriceCurrent.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.price / 100).toFixed(2) }`;

          if (selectedVariant.compare_at_price) {
            if (oldPriceElement) {
              oldPriceElement.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.compare_at_price / 100).toFixed(2) }`;
            } else {
              const oldPrice = document.createElement('del');
              oldPrice.className = 'old-price';
              oldPrice.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.compare_at_price / 100).toFixed(2) }`;
              priceElement.parentNode.insertBefore(oldPrice, priceElement.nextSibling);
            }
            if (footerPriceOld) {
              footerPriceOld.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.compare_at_price / 100).toFixed(2) }`;
            } else {
              const footerOldPrice = document.createElement('span');
              footerOldPrice.className = 'footer-price-old';
              footerOldPrice.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.compare_at_price / 100).toFixed(2) }`;
              footerPriceCurrent.parentNode.insertBefore(footerOldPrice, footerPriceCurrent);
            }
          } else {
            if (oldPriceElement) oldPriceElement.remove();
            if (footerPriceOld) footerPriceOld.remove();
          }

          variantButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');

          const url = new URL(window.location);
          url.searchParams.set('variant', selectedVariant.id);
          window.history.replaceState(null, '', url);
        }
      });
    });
  });
</script>
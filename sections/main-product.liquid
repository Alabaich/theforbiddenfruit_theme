{% assign current_variant = product.selected_or_first_available_variant %}
{% assign background_color = product.metafields.custom.background_color %}

<style>
  .splide {
    width: 100%;
    height: 100%;
  }

  .splide__slide {
    display: flex;
    justify-content: center;
    align-items: start;
  }

  .splide__slide img {
    max-width: 60%;
    height: auto;
    display: block;
  }

  .splide__arrows,
  .splide__pagination {
    display: none !important;
  }

  .product-page-wrapper {
    height: 100vh;
    color: #fff;
    position: relative;
    overflow: hidden;
  }

  .main-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    margin: 0 auto;
    padding: 24px 16px;
    position: relative;
    gap: 16px;
    box-sizing: border-box;
    flex-grow: 1;
  }
  
  .header-section {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%;
    padding: 0 16px;
    padding-top: 70px;
    box-sizing: border-box;
  }

  .product-title-section {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
  }

  .product-title {
    color: #FFF;
    font-family: Manrope;
    font-size: 64px;
    font-weight: 600;
  }

  .product-weight {
    color: #FFF;
    font-family: Inter;
    font-size: 18px;
    font-weight: 400;
  }

  .variant-selector-section {
    display: flex;
    justify-content: flex-end;
    align-items: flex-start;
    gap: 8px;
  }

    .variant-selector-section .product-option {
    display: flex;
    gap: 10px;
    }

  .variant-selector-section .product-option .variant-button {
    border-radius: 9999px;
    padding: 10px 20px;
    border: 1px solid transparent;
    font-family: Manrope;
    font-size: 16px;
    background: #FFFFFF1A;
    color: #fff;
    cursor: pointer;
    opacity: 70%;
    white-space: nowrap;
    transition: all 0.3s ease;
  }

    .variant-selector-section .product-option .variant-button:hover {
      background: #FFFFFF1A;
      border: 1px solid #fff;
    }
  
  .variant-selector-section .product-option .variant-button.active {
    background: #fff;
    color: #2c2d2c;
    opacity: 100%;
  }
  
  .product-image-container {
    width: 100%;
    display: flex;
    justify-content: center;
  align-items: center;
  flex-grow: 1;
  padding-bottom: 200px;
  }

  .product-description-section {
    color: lightgray;
    font-family: Manrope;
    font-size: 16px;
    font-style: normal;
    max-width: 400px;
    position: absolute;
    bottom: 120px;
  }

  .price-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    position: absolute;
    bottom: 120px;
    left: 50%;
    transform: translateX(-50%);
  }
  
  .current-price {
    color: #FFF;
    font-family: Manrope;
    font-size: 64px;
    font-style: normal;
    font-weight: 600;
  }
  
  .old-price {
    color: #FFF;
    font-family: Manrope;
    font-size: 32px;
    font-style: normal;
    font-weight: 400;
    text-decoration-line: line-through;
  }

  .quantity-form-section {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 16px;
    position: absolute;
    bottom: 120px;
    right: 10%;
  }

  @media screen and (max-width: 1500px) {
    .quantity-form-section {
      right: 25px;
    }
  }

  @media (max-width: 768px) {
    .quantity-form-section {
      right: 15px;
    }
  }
  
  .quantity-selector {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .quantity-selector button {
    background: transparent;
    border: 1px solid #fff;
    border-radius: 50%;
    color: #fff;
    font-size: 24px;
    font-family: Manrope;
    width: 40px;
    height: 40px;
    cursor: pointer;
    -webkit-appearance: none;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .quantity-selector button.disabled {
    border-color: rgba(255, 255, 255, 0.5);
    color: rgba(255, 255, 255, 0.5);
    cursor: not-allowed;
  }
  
  .quantity-selector input {
    width: 30px;
    text-align: center;
    background: transparent;
    border: none;
    color: #fff;
    font-size: 18px;
    -moz-appearance: textfield;
  }

  .quantity-selector input::-webkit-outer-spin-button,
  .quantity-selector input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  .buy-now-button {
    display: flex;
    height: 48px;
    padding: 14px 42px;
    justify-content: center;
    align-items: center;
    font-family: Manrope;
    gap: 10px;
    background-color: {{ background_color }};
    border: 1px solid {{ background_color }};
    border-radius: 9999px;
    color: #fff;
    font-weight: 700;
    cursor: pointer;
    box-sizing: border-box;
    transition: background-color 0.3s, color 0.3s;
  }

  .buy-now-button:hover {
    background-color: transparent;
  }

  .product-title-bottom-footer {
    color: #FFF;
    font-family: Manrope;
    font-size: 24px;
    font-weight: 600;
    text-transform: uppercase;
  }

  .footer-container {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(10px);
  }

  .footer-menu {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 32px;
    flex-grow: 1;
  }

  .footer-actions {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .footer-price-section {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    font-family: Manrope;
  }

  .footer-price-current {
    color: #FFF;
    font-size: 24px;
    font-weight: 600;
  }

  .footer-price-old {
    color: #FFF;
    font-size: 16px;
    text-decoration: line-through;
    opacity: 0.7;
  }
  
  .add-to-cart-button {
    display: flex;
    height: 48px;
    padding: 14px 24px;
    justify-content: center;
    align-items: center;
    gap: 10px;
    background-color: #FFF;
    border: 1px solid #FFF;
    border-radius: 9999px;
    color: {{ background_color }};
    font-weight: 700;
    cursor: pointer;
    box-sizing: border-box;
    transition: background-color 0.3s, color 0.3s, border-color 0.3s;
  }

  .add-to-cart-button:hover {
    background-color: transparent;
    color: #FFF;
    border-color: #FFF;
  }
  
  .footer-link {
    color: #FFF;
    font-family: Manrope;
    font-size: 16px;
    font-weight: 400;
    text-decoration: none;
  }
</style>

<div class="product-page-wrapper pageWidth js-hero-section" style="background-image: radial-gradient(circle at 50% 120%, {{ background_color }} 0%, rgb(150, 0, 0) 100%);">
  <div class="header-section">
    <div class="product-title-section">
      <h1 class="product-title">{{ product.title }}</h1>
      <span class="product-weight">{{ current_variant.title }}</span>
    </div>

    <div class="variant-selector-section">
      {% for option in product.options_with_values %}
        <div class="product-option">
          {% if product.variants.size > 1 %}
            {% for value in option.values %}
              <button
                class="variant-button {% if option.selected_value == value %}active{% endif %}"
                data-option-value="{{ value | escape }}"
              >
                {{ value | escape }}
              </button>
            {% endfor %}
          {% endif %}
        </div>
      {% endfor %}
    </div>
  </div>

  <div class="product-image-container">
    <div class="splide product-images-splide">
      <div class="splide__track">
        <div class="splide__list">
          {% for image in product.images %}
            <div class="splide__slide">
              <img src="{{ image | img_url: '750x' }}" alt="{{ image.alt | escape }}" class="product-image">
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>

  <div class="product-description-section">
    {{ product.description }}
  </div>

  <div class="price-section">
    <span class="current-price">{{ current_variant.price | money }}</span>
    {% if current_variant.compare_at_price %}
      <del class="old-price">{{ current_variant.compare_at_price | money }}</del>
    {% endif %}
  </div>

  <div class="quantity-form-section">
    <form action="/cart/add" method="post" enctype="multipart/form-data" id="product-form">
      <input type="hidden" name="id" value="{{ current_variant.id }}">
      <div class="quantity-selector">
        <button type="button" class="quantity-down-button">â€“</button>
        <input type="number" name="quantity" value="1" min="1" pattern="[0-9]*" id="quantity-input">
        <button type="button" class="quantity-up-button">+</button>
      </div>
    </form>
    <button type="submit" form="product-form" class="buy-now-button">Buy Now</button>
  </div>
  
  <div class="footer-container pageWidth">
    <h2 class="product-title-bottom-footer">{{ product.title }}</h2>
    <div class="footer-menu">
      <a href="#" class="footer-link">Science</a>
      <a href="#" class="footer-link">Reviews</a>
      <a href="#" class="footer-link">Ingredients</a>
      <a href="#" class="footer-link">Dosage</a>
      <a href="#" class="footer-link">FAQ</a>
      <a href="#" class="footer-link">Subscription</a>
    </div>
    <div class="footer-actions">
      <div class="footer-price-section">
        {% if current_variant.compare_at_price %}
          <span class="footer-price-old">{{ current_variant.compare_at_price | money }}</span>
        {% endif %}
        <span class="footer-price-current">{{ current_variant.price | money }}</span>
      </div>
      <button type="submit" form="product-form" class="add-to-cart-button">Add To Cart</button>
    </div>
  </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css">
<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    new Splide('.product-images-splide', {
      type: 'fade',
      rewind: true,
      autoplay: true,
      interval: 5000,
      speed: 1000,
      pauseOnHover: false,
      arrows: false,
      pagination: false
    }).mount();

    const quantityInput = document.getElementById('quantity-input');
    const quantityDownButton = document.querySelector('.quantity-down-button');
    const quantityUpButton = document.querySelector('.quantity-up-button');
    const productForm = document.getElementById('product-form');
    const buyNowButton = document.querySelector('.buy-now-button');
    const addToCartButton = document.querySelector('.add-to-cart-button');

    function updateQuantityButtons() {
      const currentValue = parseInt(quantityInput.value);
      const min = parseInt(quantityInput.min);

      if (currentValue <= min) {
        quantityDownButton.classList.add('disabled');
        quantityDownButton.disabled = true;
      } else {
        quantityDownButton.classList.remove('disabled');
        quantityDownButton.disabled = false;
      }
    }

    quantityDownButton.addEventListener('click', function() {
      quantityInput.stepDown();
      updateQuantityButtons();
    });

    quantityUpButton.addEventListener('click', function() {
      quantityInput.stepUp();
      updateQuantityButtons();
    });

    quantityInput.addEventListener('change', updateQuantityButtons);

    buyNowButton.addEventListener('click', function(e) {
      e.preventDefault();
      const formData = new FormData(productForm);
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(() => {
        window.location.href = '/cart';
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });

    addToCartButton.addEventListener('click', function(e) {
      e.preventDefault();
      const formData = new FormData(productForm);
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(() => {
        window.location.href = '/cart';
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });

    updateQuantityButtons();

    const variantButtons = document.querySelectorAll('.variant-button');
    const hiddenInput = productForm.querySelector('input[name="id"]');
    const productWeightElement = document.querySelector('.product-weight');
    const priceElement = document.querySelector('.price-section .current-price');
    const oldPriceElement = document.querySelector('.price-section .old-price');
    const footerPriceCurrent = document.querySelector('.footer-price-current');
    const footerPriceOld = document.querySelector('.footer-price-old');

    variantButtons.forEach(button => {
      button.addEventListener('click', function(event) {
        event.preventDefault();

        const selectedValue = this.getAttribute('data-option-value');

        const allVariants = {{ product.variants | json }};
        const selectedVariant = allVariants.find(variant => variant.title === selectedValue);

        if (selectedVariant) {
          hiddenInput.value = selectedVariant.id;

          productWeightElement.textContent = selectedVariant.title;
          priceElement.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.price / 100).toFixed(2) }`;
          footerPriceCurrent.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.price / 100).toFixed(2) }`;

          if (selectedVariant.compare_at_price) {
            if (oldPriceElement) {
              oldPriceElement.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.compare_at_price / 100).toFixed(2) }`;
            } else {
              const oldPrice = document.createElement('del');
              oldPrice.className = 'old-price';
              oldPrice.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.compare_at_price / 100).toFixed(2) }`;
              priceElement.parentNode.insertBefore(oldPrice, priceElement.nextSibling);
            }
            if (footerPriceOld) {
              footerPriceOld.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.compare_at_price / 100).toFixed(2) }`;
            } else {
              const footerOldPrice = document.createElement('span');
              footerOldPrice.className = 'footer-price-old';
              footerOldPrice.textContent = `{{ cart.currency.symbol }}${ (selectedVariant.compare_at_price / 100).toFixed(2) }`;
              footerPriceCurrent.parentNode.insertBefore(footerOldPrice, footerPriceCurrent);
            }
          } else {
            if (oldPriceElement) oldPriceElement.remove();
            if (footerPriceOld) footerPriceOld.remove();
          }

          variantButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');

          const url = new URL(window.location);
          url.searchParams.set('variant', selectedVariant.id);
          window.history.replaceState(null, '', url);
        }
      });
    });
  });
</script>